{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, withKeys as _withKeys, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"chat-container\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, {\n      elevation: \"14\",\n      height: \"400px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, {\n        class: \"chat-header\"\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"Santa Claus Chat\")])),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_card_text, {\n        class: \"chat-messages\",\n        ref: \"chatMessages\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (msg, index) => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            key: index,\n            class: _normalizeClass({\n              'my-message': msg.isMine,\n              'received-message': !msg.isMine\n            }),\n            ref_for: true,\n            ref: \"messageItems\"\n          }, [_createElementVNode(\"span\", null, _toDisplayString(msg.text), 1 /* TEXT */)], 2 /* CLASS */);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 512 /* NEED_PATCH */), _createVNode(_component_v_card_actions, {\n        class: \"chat-input\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          variant: \"outlined\",\n          modelValue: $data.newMessage,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newMessage = $event),\n          label: \"Nachricht...\",\n          outlined: \"\",\n          dense: \"\",\n          onKeyup: _withKeys($options.sendMessage, [\"enter\"]),\n          class: \"flex-grow-1\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onKeyup\"]), _createVNode(_component_v_btn, {\n          variant: \"text\",\n          color: \"primary\",\n          onClick: $options.sendMessage\n        }, {\n          default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"Senden\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","class","default","_withCtx","_createVNode","_component_v_card","elevation","height","_component_v_card_title","_cache","_createTextVNode","_","_component_v_card_text","ref","_createElementBlock","_Fragment","_renderList","$data","messages","msg","index","key","_normalizeClass","isMine","ref_for","_createElementVNode","_toDisplayString","text","_component_v_card_actions","_component_v_text_field","variant","modelValue","newMessage","$event","label","outlined","dense","onKeyup","_withKeys","$options","sendMessage","_component_v_btn","color","onClick"],"sources":["/Users/tomholler/Desktop/IJ_PROJECTS/web-dev-app/frontend/src/components/ChatView.vue"],"sourcesContent":["<template>\n  <v-container class=\"chat-container\">\n    <v-card elevation=\"14\" height=\"400px\">\n      <v-card-title class=\"chat-header\">Santa Claus Chat</v-card-title>\n      <v-card-text class=\"chat-messages\" ref=\"chatMessages\">\n        <div\n            v-for=\"(msg, index) in messages\"\n            :key=\"index\"\n            :class=\"{'my-message': msg.isMine, 'received-message': !msg.isMine}\"\n            ref=\"messageItems\"\n        >\n          <span>{{ msg.text }}</span>\n        </div>\n      </v-card-text>\n      <v-card-actions class=\"chat-input\">\n        <v-text-field\n            variant=\"outlined\"\n            v-model=\"newMessage\"\n            label=\"Nachricht...\"\n            outlined\n            dense\n            @keyup.enter=\"sendMessage\"\n            class=\"flex-grow-1\"\n        ></v-text-field>\n        <v-btn variant=\"text\" color=\"primary\" @click=\"sendMessage\">Senden</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      newMessage: \"\",\n      messages: [{ text: \"Willkommen Ho Ho Ho!\", isMine: false }],\n    };\n  },\n  methods: {\n    sendMessage() {\n      if (this.newMessage.trim() !== \"\") {\n        const userMessage = this.newMessage;\n\n        this.messages.push({text: this.newMessage, isMine: true});\n        this.newMessage = \"\";\n\n\n        this.$nextTick(() => {\n          this.scrollToBottom();\n        });\n        if (userMessage.toLowerCase() === \"hello\") {\n          this.messages.push({text: \"Hallo!\", isMine: false});\n        } else {\n          this.messages.push({text: \"Gerade keine Zeit sorry!\", isMine: false})\n        }\n        const reminderDate = new Date('2025-02-16T22:10:00'); //(JJJJ-MM-TTTHH:MM:SS)\n        const today = new Date();\n\n\n        if (reminderDate.getFullYear() === today.getFullYear() &&\n            reminderDate.getMonth() === today.getMonth() &&\n            reminderDate.getDate() === today.getDate() &&\n            reminderDate.getHours() === today.getHours() &&\n            reminderDate.getMinutes() === today.getMinutes() &&\n            reminderDate.getSeconds() === today.getSeconds()) {\n          this.messages.push({text: \"Vergiss deine Geschenke nicht\", isMine: false});\n        }\n      }\n    },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        setTimeout(() => {\n          const chatBox = this.$refs.chatMessages;\n          const messages = this.$refs.messageItems;\n          if (chatBox && messages && messages.length) {\n            messages[messages.length - 1].scrollIntoView({ behavior: \"smooth\" });\n          }\n        }, );\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.chat-header {\n  background-color: rebeccapurple;\n  color: white;\n  padding: 10px;\n  font-weight: bold;\n  text-align: center;\n}\n\n.chat-messages {\n  height: 250px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n}\n\n.my-message, .received-message {\n  max-width: 70%;\n  padding: 8px 12px;\n  margin: 5px;\n  border-radius: 18px;\n  word-wrap: break-word;\n}\n\n.my-message {\n  background-color: #2582d3;\n  color: white;\n  align-self: flex-end;\n  margin-left: auto;\n}\n\n.received-message {\n  background-color: #bf4343;\n  align-self: flex-start;\n}\n</style>"],"mappings":";;;;;;;;;uBACEA,YAAA,CA0BcC,sBAAA;IA1BDC,KAAK,EAAC;EAAgB;IADrCC,OAAA,EAAAC,QAAA,CAEI,MAwBS,CAxBTC,YAAA,CAwBSC,iBAAA;MAxBDC,SAAS,EAAC,IAAI;MAACC,MAAM,EAAC;;MAFlCL,OAAA,EAAAC,QAAA,CAGM,MAAiE,CAAjEC,YAAA,CAAiEI,uBAAA;QAAnDP,KAAK,EAAC;MAAa;QAHvCC,OAAA,EAAAC,QAAA,CAGwC,MAAgBM,MAAA,QAAAA,MAAA,OAHxDC,gBAAA,CAGwC,kBAAgB,E;QAHxDC,CAAA;UAIMP,YAAA,CAScQ,sBAAA;QATDX,KAAK,EAAC,eAAe;QAACY,GAAG,EAAC;;QAJ7CX,OAAA,EAAAC,QAAA,CAMY,MAAgC,E,kBADpCW,mBAAA,CAOMC,SAAA,QAZdC,WAAA,CAMmCC,KAAA,CAAAC,QAAQ,EAN3C,CAMoBC,GAAG,EAAEC,KAAK;+BADtBN,mBAAA,CAOM;YALDO,GAAG,EAAED,KAAK;YACVnB,KAAK,EARlBqB,eAAA;cAAA,cAQmCH,GAAG,CAACI,MAAM;cAAA,qBAAuBJ,GAAG,CAACI;YAAM;YAR9EC,OAAA;YASYX,GAAG,EAAC;cAENY,mBAAA,CAA2B,cAAAC,gBAAA,CAAlBP,GAAG,CAACQ,IAAI,iB;;QAX3BhB,CAAA;gCAcMP,YAAA,CAWiBwB,yBAAA;QAXD3B,KAAK,EAAC;MAAY;QAdxCC,OAAA,EAAAC,QAAA,CAeQ,MAQgB,CARhBC,YAAA,CAQgByB,uBAAA;UAPZC,OAAO,EAAC,UAAU;UAhB9BC,UAAA,EAiBqBd,KAAA,CAAAe,UAAU;UAjB/B,uBAAAvB,MAAA,QAAAA,MAAA,MAAAwB,MAAA,IAiBqBhB,KAAA,CAAAe,UAAU,GAAAC,MAAA;UACnBC,KAAK,EAAC,cAAc;UACpBC,QAAQ,EAAR,EAAQ;UACRC,KAAK,EAAL,EAAK;UACJC,OAAK,EArBlBC,SAAA,CAqB0BC,QAAA,CAAAC,WAAW;UACzBvC,KAAK,EAAC;4DAEVG,YAAA,CAAyEqC,gBAAA;UAAlEX,OAAO,EAAC,MAAM;UAACY,KAAK,EAAC,SAAS;UAAEC,OAAK,EAAEJ,QAAA,CAAAC;;UAxBtDtC,OAAA,EAAAC,QAAA,CAwBmE,MAAMM,MAAA,QAAAA,MAAA,OAxBzEC,gBAAA,CAwBmE,QAAM,E;UAxBzEC,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}